name: tests
on:
  pull_request:
    paths-ignore: ['dist/**', '*.md']
  push:
    branches: [0.9.x, main, next]
    paths-ignore: ['dist/**', '*.md']
jobs:
  test:
    name: PHP ${{ matrix.php }}, Laravel ${{ matrix.laravel }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.3', '7.4']
        laravel: [5.5.*, 5.6.*, 5.7.*, 5.8.*, 6.*, 7.*, 8.*]
        include:
          - laravel: 5.5.*
            testbench: 3.5.*
          - laravel: 5.6.*
            testbench: 3.6.*
          - laravel: 5.7.*
            testbench: 3.7.*
          - laravel: 5.8.*
            testbench: 3.8.*
          - laravel: 6.*
            testbench: 4.*
          - laravel: 7.*
            testbench: 5.*
          - laravel: 8.*
            testbench: 6.*
          - php: '8.0'
            laravel: 6.*
            testbench: 4.*
          - php: '8.0'
            laravel: 7.*
            testbench: 5.*
          - php: '8.0'
            laravel: 8.*
            testbench: 6.*
          - php: '8.0'
            laravel: dev-master
            testbench: dev-master
          - php: '8.1'
            laravel: 8.*
            testbench: 6.*
          - php: '8.1'
            laravel: dev-master
            testbench: dev-master
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: php-${{ matrix.php }}-composer-
      - run: |
          composer require laravel/framework:${{ matrix.laravel }} orchestra/testbench:${{ matrix.testbench }} --no-update --no-interaction
          composer update --prefer-dist --no-interaction
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-
      - run: |
          npm install
          npm run build
      - run: vendor/bin/phpunit --testdox --colors=always
      - run: npm test
